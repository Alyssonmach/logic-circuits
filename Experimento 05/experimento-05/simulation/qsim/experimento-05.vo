// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "10/27/2020 19:00:12"

// 
// Device: Altera EP4CE115F29C9L Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Mod_Teste4 (
	SW,
	LEDR,
	LEDG,
	LEDB);
input 	[8:0] SW;
output 	[3:0] LEDR;
output 	[3:0] LEDG;
output 	LEDB;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \LEDR[0]~output_o ;
wire \LEDR[1]~output_o ;
wire \LEDR[2]~output_o ;
wire \LEDR[3]~output_o ;
wire \LEDG[0]~output_o ;
wire \LEDG[1]~output_o ;
wire \LEDG[2]~output_o ;
wire \LEDG[3]~output_o ;
wire \LEDB~output_o ;
wire \SW[1]~input_o ;
wire \SW[5]~input_o ;
wire \soma_subtrai|somador|sc1|s~0_combout ;
wire \SW[6]~input_o ;
wire \SW[0]~input_o ;
wire \SW[2]~input_o ;
wire \soma_subtrai|seletor|ic2|S~combout ;
wire \soma_subtrai|somador|sc1|ts~0_combout ;
wire \soma_subtrai|somador|sc1|ts~1_combout ;
wire \soma_subtrai|somador|sc2|s~combout ;
wire \SW[3]~input_o ;
wire \SW[7]~input_o ;
wire \soma_subtrai|somador|sc2|ts~0_combout ;
wire \soma_subtrai|somador|sc3|s~0_combout ;
wire \SW[4]~input_o ;
wire \SW[8]~input_o ;
wire \soma_subtrai|somador|sc3|ts~0_combout ;
wire \soma_subtrai|somador|sc4|s~0_combout ;
wire \soma_subtrai|somador|sc1|ts~combout ;
wire \soma_subtrai|somador|sc4|ts~0_combout ;
wire \soma_subtrai|overflow|x~0_combout ;


cycloneive_io_obuf \LEDR[0]~output (
	.i(\soma_subtrai|somador|sc1|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[1]~output (
	.i(\soma_subtrai|somador|sc2|s~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[2]~output (
	.i(\soma_subtrai|somador|sc3|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[2]~output .bus_hold = "false";
defparam \LEDR[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[3]~output (
	.i(\soma_subtrai|somador|sc4|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[3]~output .bus_hold = "false";
defparam \LEDR[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[0]~output (
	.i(\soma_subtrai|somador|sc1|ts~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[0]~output .bus_hold = "false";
defparam \LEDG[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[1]~output (
	.i(\soma_subtrai|somador|sc2|ts~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[1]~output .bus_hold = "false";
defparam \LEDG[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[2]~output (
	.i(\soma_subtrai|somador|sc3|ts~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[2]~output .bus_hold = "false";
defparam \LEDG[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[3]~output (
	.i(\soma_subtrai|somador|sc4|ts~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[3]~output .bus_hold = "false";
defparam \LEDG[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDB~output (
	.i(\soma_subtrai|overflow|x~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDB~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDB~output .bus_hold = "false";
defparam \LEDB~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[5]~input (
	.i(SW[5]),
	.ibar(gnd),
	.o(\SW[5]~input_o ));
// synopsys translate_off
defparam \SW[5]~input .bus_hold = "false";
defparam \SW[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc1|s~0 (
// Equation(s):
// \soma_subtrai|somador|sc1|s~0_combout  = \SW[1]~input_o  $ (\SW[5]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\SW[1]~input_o ),
	.datad(\SW[5]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc1|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc1|s~0 .lut_mask = 16'h0FF0;
defparam \soma_subtrai|somador|sc1|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \SW[6]~input (
	.i(SW[6]),
	.ibar(gnd),
	.o(\SW[6]~input_o ));
// synopsys translate_off
defparam \SW[6]~input .bus_hold = "false";
defparam \SW[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|seletor|ic2|S (
// Equation(s):
// \soma_subtrai|seletor|ic2|S~combout  = \SW[0]~input_o  $ (\SW[2]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\SW[0]~input_o ),
	.datad(\SW[2]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|seletor|ic2|S~combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|seletor|ic2|S .lut_mask = 16'h0FF0;
defparam \soma_subtrai|seletor|ic2|S .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc1|ts~0 (
// Equation(s):
// \soma_subtrai|somador|sc1|ts~0_combout  = (\SW[0]~input_o  & !\SW[1]~input_o )

	.dataa(\SW[0]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\SW[1]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc1|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc1|ts~0 .lut_mask = 16'h00AA;
defparam \soma_subtrai|somador|sc1|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc1|ts~1 (
// Equation(s):
// \soma_subtrai|somador|sc1|ts~1_combout  = (\SW[5]~input_o  & ((\SW[1]~input_o ) # (\SW[0]~input_o )))

	.dataa(\SW[5]~input_o ),
	.datab(\SW[1]~input_o ),
	.datac(\SW[0]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc1|ts~1_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc1|ts~1 .lut_mask = 16'hA8A8;
defparam \soma_subtrai|somador|sc1|ts~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc2|s (
// Equation(s):
// \soma_subtrai|somador|sc2|s~combout  = \SW[6]~input_o  $ (\soma_subtrai|seletor|ic2|S~combout  $ (((\soma_subtrai|somador|sc1|ts~0_combout ) # (\soma_subtrai|somador|sc1|ts~1_combout ))))

	.dataa(\SW[6]~input_o ),
	.datab(\soma_subtrai|seletor|ic2|S~combout ),
	.datac(\soma_subtrai|somador|sc1|ts~0_combout ),
	.datad(\soma_subtrai|somador|sc1|ts~1_combout ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc2|s~combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc2|s .lut_mask = 16'h9996;
defparam \soma_subtrai|somador|sc2|s .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[7]~input (
	.i(SW[7]),
	.ibar(gnd),
	.o(\SW[7]~input_o ));
// synopsys translate_off
defparam \SW[7]~input .bus_hold = "false";
defparam \SW[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc2|ts~0 (
// Equation(s):
// \soma_subtrai|somador|sc2|ts~0_combout  = (\soma_subtrai|seletor|ic2|S~combout  & ((\soma_subtrai|somador|sc1|ts~1_combout ) # ((\soma_subtrai|somador|sc1|ts~0_combout ) # (\SW[6]~input_o )))) # (!\soma_subtrai|seletor|ic2|S~combout  & (\SW[6]~input_o  & 
// ((\soma_subtrai|somador|sc1|ts~1_combout ) # (\soma_subtrai|somador|sc1|ts~0_combout ))))

	.dataa(\soma_subtrai|somador|sc1|ts~1_combout ),
	.datab(\soma_subtrai|somador|sc1|ts~0_combout ),
	.datac(\soma_subtrai|seletor|ic2|S~combout ),
	.datad(\SW[6]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc2|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc2|ts~0 .lut_mask = 16'hFEE0;
defparam \soma_subtrai|somador|sc2|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc3|s~0 (
// Equation(s):
// \soma_subtrai|somador|sc3|s~0_combout  = \SW[0]~input_o  $ (\SW[3]~input_o  $ (\SW[7]~input_o  $ (\soma_subtrai|somador|sc2|ts~0_combout )))

	.dataa(\SW[0]~input_o ),
	.datab(\SW[3]~input_o ),
	.datac(\SW[7]~input_o ),
	.datad(\soma_subtrai|somador|sc2|ts~0_combout ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc3|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc3|s~0 .lut_mask = 16'h6996;
defparam \soma_subtrai|somador|sc3|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \SW[4]~input (
	.i(SW[4]),
	.ibar(gnd),
	.o(\SW[4]~input_o ));
// synopsys translate_off
defparam \SW[4]~input .bus_hold = "false";
defparam \SW[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[8]~input (
	.i(SW[8]),
	.ibar(gnd),
	.o(\SW[8]~input_o ));
// synopsys translate_off
defparam \SW[8]~input .bus_hold = "false";
defparam \SW[8]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc3|ts~0 (
// Equation(s):
// \soma_subtrai|somador|sc3|ts~0_combout  = (\soma_subtrai|somador|sc2|ts~0_combout  & ((\SW[7]~input_o ) # (\SW[3]~input_o  $ (\SW[0]~input_o )))) # (!\soma_subtrai|somador|sc2|ts~0_combout  & (\SW[7]~input_o  & (\SW[3]~input_o  $ (\SW[0]~input_o ))))

	.dataa(\SW[3]~input_o ),
	.datab(\SW[0]~input_o ),
	.datac(\soma_subtrai|somador|sc2|ts~0_combout ),
	.datad(\SW[7]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc3|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc3|ts~0 .lut_mask = 16'hF660;
defparam \soma_subtrai|somador|sc3|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc4|s~0 (
// Equation(s):
// \soma_subtrai|somador|sc4|s~0_combout  = \SW[0]~input_o  $ (\SW[4]~input_o  $ (\SW[8]~input_o  $ (\soma_subtrai|somador|sc3|ts~0_combout )))

	.dataa(\SW[0]~input_o ),
	.datab(\SW[4]~input_o ),
	.datac(\SW[8]~input_o ),
	.datad(\soma_subtrai|somador|sc3|ts~0_combout ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc4|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc4|s~0 .lut_mask = 16'h6996;
defparam \soma_subtrai|somador|sc4|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc1|ts (
// Equation(s):
// \soma_subtrai|somador|sc1|ts~combout  = (\SW[1]~input_o  & (\SW[5]~input_o )) # (!\SW[1]~input_o  & ((\SW[0]~input_o )))

	.dataa(\SW[5]~input_o ),
	.datab(\SW[0]~input_o ),
	.datac(gnd),
	.datad(\SW[1]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc1|ts~combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc1|ts .lut_mask = 16'hAACC;
defparam \soma_subtrai|somador|sc1|ts .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|somador|sc4|ts~0 (
// Equation(s):
// \soma_subtrai|somador|sc4|ts~0_combout  = (\soma_subtrai|somador|sc3|ts~0_combout  & ((\SW[8]~input_o ) # (\SW[4]~input_o  $ (\SW[0]~input_o )))) # (!\soma_subtrai|somador|sc3|ts~0_combout  & (\SW[8]~input_o  & (\SW[4]~input_o  $ (\SW[0]~input_o ))))

	.dataa(\SW[4]~input_o ),
	.datab(\SW[0]~input_o ),
	.datac(\soma_subtrai|somador|sc3|ts~0_combout ),
	.datad(\SW[8]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|somador|sc4|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|somador|sc4|ts~0 .lut_mask = 16'hF660;
defparam \soma_subtrai|somador|sc4|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \soma_subtrai|overflow|x~0 (
// Equation(s):
// \soma_subtrai|overflow|x~0_combout  = (\soma_subtrai|somador|sc3|ts~0_combout  & (!\SW[8]~input_o  & (\SW[0]~input_o  $ (!\SW[4]~input_o )))) # (!\soma_subtrai|somador|sc3|ts~0_combout  & (\SW[8]~input_o  & (\SW[0]~input_o  $ (\SW[4]~input_o ))))

	.dataa(\SW[0]~input_o ),
	.datab(\SW[4]~input_o ),
	.datac(\soma_subtrai|somador|sc3|ts~0_combout ),
	.datad(\SW[8]~input_o ),
	.cin(gnd),
	.combout(\soma_subtrai|overflow|x~0_combout ),
	.cout());
// synopsys translate_off
defparam \soma_subtrai|overflow|x~0 .lut_mask = 16'h0690;
defparam \soma_subtrai|overflow|x~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign LEDR[0] = \LEDR[0]~output_o ;

assign LEDR[1] = \LEDR[1]~output_o ;

assign LEDR[2] = \LEDR[2]~output_o ;

assign LEDR[3] = \LEDR[3]~output_o ;

assign LEDG[0] = \LEDG[0]~output_o ;

assign LEDG[1] = \LEDG[1]~output_o ;

assign LEDG[2] = \LEDG[2]~output_o ;

assign LEDG[3] = \LEDG[3]~output_o ;

assign LEDB = \LEDB~output_o ;

endmodule
