// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "10/26/2020 20:00:35"

// 
// Device: Altera EP4CE10F17I8L Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module somador_subtrator (
	A,
	B,
	ci,
	S,
	Ts,
	Ov);
input 	[3:0] A;
input 	[3:0] B;
input 	ci;
output 	[3:0] S;
output 	[3:0] Ts;
output 	Ov;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S[0]~output_o ;
wire \S[1]~output_o ;
wire \S[2]~output_o ;
wire \S[3]~output_o ;
wire \Ts[0]~output_o ;
wire \Ts[1]~output_o ;
wire \Ts[2]~output_o ;
wire \Ts[3]~output_o ;
wire \Ov~output_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \somador|sc1|s~0_combout ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \ci~input_o ;
wire \seletor|ic2|S~combout ;
wire \somador|sc1|ts~0_combout ;
wire \somador|sc1|ts~1_combout ;
wire \somador|sc2|s~combout ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \somador|sc2|ts~0_combout ;
wire \somador|sc3|s~0_combout ;
wire \B[3]~input_o ;
wire \A[3]~input_o ;
wire \somador|sc3|ts~0_combout ;
wire \somador|sc4|s~0_combout ;
wire \somador|sc1|ts~combout ;
wire \somador|sc4|ts~0_combout ;
wire \overflow|x~0_combout ;


cycloneive_io_obuf \S[0]~output (
	.i(\somador|sc1|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[1]~output (
	.i(\somador|sc2|s~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[2]~output (
	.i(\somador|sc3|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[3]~output (
	.i(\somador|sc4|s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Ts[0]~output (
	.i(\somador|sc1|ts~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Ts[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Ts[0]~output .bus_hold = "false";
defparam \Ts[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Ts[1]~output (
	.i(\somador|sc2|ts~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Ts[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Ts[1]~output .bus_hold = "false";
defparam \Ts[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Ts[2]~output (
	.i(\somador|sc3|ts~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Ts[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Ts[2]~output .bus_hold = "false";
defparam \Ts[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Ts[3]~output (
	.i(\somador|sc4|ts~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Ts[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Ts[3]~output .bus_hold = "false";
defparam \Ts[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Ov~output (
	.i(\overflow|x~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Ov~output_o ),
	.obar());
// synopsys translate_off
defparam \Ov~output .bus_hold = "false";
defparam \Ov~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc1|s~0 (
// Equation(s):
// \somador|sc1|s~0_combout  = \A[0]~input_o  $ (\B[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\A[0]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\somador|sc1|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc1|s~0 .lut_mask = 16'h0FF0;
defparam \somador|sc1|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ci~input (
	.i(ci),
	.ibar(gnd),
	.o(\ci~input_o ));
// synopsys translate_off
defparam \ci~input .bus_hold = "false";
defparam \ci~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \seletor|ic2|S (
// Equation(s):
// \seletor|ic2|S~combout  = \B[1]~input_o  $ (\ci~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\B[1]~input_o ),
	.datad(\ci~input_o ),
	.cin(gnd),
	.combout(\seletor|ic2|S~combout ),
	.cout());
// synopsys translate_off
defparam \seletor|ic2|S .lut_mask = 16'h0FF0;
defparam \seletor|ic2|S .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc1|ts~0 (
// Equation(s):
// \somador|sc1|ts~0_combout  = (\ci~input_o  & !\B[0]~input_o )

	.dataa(\ci~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\somador|sc1|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc1|ts~0 .lut_mask = 16'h00AA;
defparam \somador|sc1|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc1|ts~1 (
// Equation(s):
// \somador|sc1|ts~1_combout  = (\A[0]~input_o  & ((\B[0]~input_o ) # (\ci~input_o )))

	.dataa(\A[0]~input_o ),
	.datab(\B[0]~input_o ),
	.datac(\ci~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\somador|sc1|ts~1_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc1|ts~1 .lut_mask = 16'hA8A8;
defparam \somador|sc1|ts~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc2|s (
// Equation(s):
// \somador|sc2|s~combout  = \A[1]~input_o  $ (\seletor|ic2|S~combout  $ (((\somador|sc1|ts~0_combout ) # (\somador|sc1|ts~1_combout ))))

	.dataa(\A[1]~input_o ),
	.datab(\seletor|ic2|S~combout ),
	.datac(\somador|sc1|ts~0_combout ),
	.datad(\somador|sc1|ts~1_combout ),
	.cin(gnd),
	.combout(\somador|sc2|s~combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc2|s .lut_mask = 16'h9996;
defparam \somador|sc2|s .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc2|ts~0 (
// Equation(s):
// \somador|sc2|ts~0_combout  = (\seletor|ic2|S~combout  & ((\somador|sc1|ts~1_combout ) # ((\somador|sc1|ts~0_combout ) # (\A[1]~input_o )))) # (!\seletor|ic2|S~combout  & (\A[1]~input_o  & ((\somador|sc1|ts~1_combout ) # (\somador|sc1|ts~0_combout ))))

	.dataa(\somador|sc1|ts~1_combout ),
	.datab(\somador|sc1|ts~0_combout ),
	.datac(\seletor|ic2|S~combout ),
	.datad(\A[1]~input_o ),
	.cin(gnd),
	.combout(\somador|sc2|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc2|ts~0 .lut_mask = 16'hFEE0;
defparam \somador|sc2|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc3|s~0 (
// Equation(s):
// \somador|sc3|s~0_combout  = \ci~input_o  $ (\A[2]~input_o  $ (\B[2]~input_o  $ (\somador|sc2|ts~0_combout )))

	.dataa(\ci~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(\somador|sc2|ts~0_combout ),
	.cin(gnd),
	.combout(\somador|sc3|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc3|s~0 .lut_mask = 16'h6996;
defparam \somador|sc3|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc3|ts~0 (
// Equation(s):
// \somador|sc3|ts~0_combout  = (\somador|sc2|ts~0_combout  & ((\A[2]~input_o ) # (\ci~input_o  $ (\B[2]~input_o )))) # (!\somador|sc2|ts~0_combout  & (\A[2]~input_o  & (\ci~input_o  $ (\B[2]~input_o ))))

	.dataa(\ci~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\somador|sc2|ts~0_combout ),
	.datad(\A[2]~input_o ),
	.cin(gnd),
	.combout(\somador|sc3|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc3|ts~0 .lut_mask = 16'hF660;
defparam \somador|sc3|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc4|s~0 (
// Equation(s):
// \somador|sc4|s~0_combout  = \ci~input_o  $ (\B[3]~input_o  $ (\A[3]~input_o  $ (\somador|sc3|ts~0_combout )))

	.dataa(\ci~input_o ),
	.datab(\B[3]~input_o ),
	.datac(\A[3]~input_o ),
	.datad(\somador|sc3|ts~0_combout ),
	.cin(gnd),
	.combout(\somador|sc4|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc4|s~0 .lut_mask = 16'h6996;
defparam \somador|sc4|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc1|ts (
// Equation(s):
// \somador|sc1|ts~combout  = (\B[0]~input_o  & (\A[0]~input_o )) # (!\B[0]~input_o  & ((\ci~input_o )))

	.dataa(\A[0]~input_o ),
	.datab(\ci~input_o ),
	.datac(gnd),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\somador|sc1|ts~combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc1|ts .lut_mask = 16'hAACC;
defparam \somador|sc1|ts .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|sc4|ts~0 (
// Equation(s):
// \somador|sc4|ts~0_combout  = (\somador|sc3|ts~0_combout  & ((\A[3]~input_o ) # (\ci~input_o  $ (\B[3]~input_o )))) # (!\somador|sc3|ts~0_combout  & (\A[3]~input_o  & (\ci~input_o  $ (\B[3]~input_o ))))

	.dataa(\ci~input_o ),
	.datab(\B[3]~input_o ),
	.datac(\somador|sc3|ts~0_combout ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\somador|sc4|ts~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|sc4|ts~0 .lut_mask = 16'hF660;
defparam \somador|sc4|ts~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \overflow|x~0 (
// Equation(s):
// \overflow|x~0_combout  = (\somador|sc3|ts~0_combout  & (!\A[3]~input_o  & (\ci~input_o  $ (!\B[3]~input_o )))) # (!\somador|sc3|ts~0_combout  & (\A[3]~input_o  & (\ci~input_o  $ (\B[3]~input_o ))))

	.dataa(\ci~input_o ),
	.datab(\B[3]~input_o ),
	.datac(\somador|sc3|ts~0_combout ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\overflow|x~0_combout ),
	.cout());
// synopsys translate_off
defparam \overflow|x~0 .lut_mask = 16'h0690;
defparam \overflow|x~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign S[0] = \S[0]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[3] = \S[3]~output_o ;

assign Ts[0] = \Ts[0]~output_o ;

assign Ts[1] = \Ts[1]~output_o ;

assign Ts[2] = \Ts[2]~output_o ;

assign Ts[3] = \Ts[3]~output_o ;

assign Ov = \Ov~output_o ;

endmodule
